---
title: "Performance comparison"
format:
  html:
    toc: true
    toc_float: true
params:
  test_output: ""
---

```{r include = FALSE}
suppressPackageStartupMessages({
  library(DT)
  library(dplyr)
  library(echarts4r)
})
DT_options <- list(
  initComplete = JS(
    "function(settings, json) {",
    "$(this.api().table().header()).css({'background-color': '#1a384c', 'color': '#fff'});",
    "}")
)
```

## Versions

This report aims to compare different versions of the app. Here is the list of versions and the development dates:

```{r tab, echo=FALSE}
out <- params$test_output
df_all_branches <- data.frame()
for (n in range(1:length(out))) {
  tmp_df <- out[[n]][[1]]
  tmp_df$branch <- names(out)[n]
  df_all_branches <- rbind(df_all_branches, tmp_df)
}
df_by_dates <- df_all_branches %>%
  select(rep_id, branch, date) %>%
  unique() %>%
  arrange(desc(date))
datatable(
  data = df_by_dates,
  rownames = FALSE,
  colnames = c("Repository", "Branch", "Date"),
  options = DT_options,
  ) %>%
  formatDate(columns = "date", method = "toLocaleString")
```

## Raw data

The time spent to compute each of the tests is displayed below as well as their respective branch.

```{r raw data, echo=FALSE}
df_display <- df_all_branches %>%
  select(branch, test_name, duration_ms) %>%
  arrange(test_name, branch)
datatable(
  data = df_display,
  rownames = FALSE,
  colnames = c("Branch", "Test name", "Duration (ms)"), 
  options = DT_options
)
```

## Visualizations

```{r preparing data, echo=FALSE}
baseline <- min(df_all_branches$duration_ms)
df_baseline <- df_all_branches %>% 
  filter(duration_ms == baseline) %>%
  select(test_name, duration_ms) %>%
  rename(baseline = duration_ms)
# join it with the main dataset
times_faster <- function(a, b) b/a
df_comp <- df_all_branches %>% left_join(df_baseline, by = character(), suffix = c("", ".y")) %>%
  select(-test_name.y) %>%
  mutate(tf = times_faster(duration_ms, baseline))
```

### Comparing the tests across branches

```{r comp branches, echo=FALSE}
df_comp %>%
  group_by(branch) %>%
  e_charts(x = test_name) %>%
  e_bar(serie = duration_ms) %>%
  e_axis_labels(y = "Time (ms)") %>%
  e_x_axis(axisLabel = list(interval = 0, rotate = 10)) %>%
  e_mark_line(data = list(yAxis = df_comp$baseline[1]), 
              title = "Baseline",
              lineStyle = list(color = "#757575"))
```

```{r comp branches by test, echo=FALSE}
df_comp %>%
  group_by(test_name) %>%
  e_charts(branch) %>%
  e_scatter(duration_ms, symbol_size = 6) %>%
  e_facet(rows = ceiling(length(unique(df_comp$test_name))/4), cols = 4,
          legend_pos = "top", legend_space = 12)

```

### Comparing the durations of particular tests over time

```{r comp over time, echo=FALSE, warning=FALSE}
df_comp %>%
  select(test_name, date, duration_ms) %>%
  group_by(test_name) %>%
  arrange(date) %>%
  e_charts(x = date) %>%
  e_line(serie = duration_ms) %>%
  e_axis_labels(y = "Time (ms)")
```
