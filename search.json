[{"path":"/PULL_REQUEST_TEMPLATE.html","id":"link-to-the-issue","dir":"","previous_headings":"","what":"Link to the Issue","title":"NA","text":"…","code":""},{"path":"/PULL_REQUEST_TEMPLATE.html","id":"definition-of-done","dir":"","previous_headings":"","what":"Definition of Done","title":"NA","text":"…","code":""},{"path":"/PULL_REQUEST_TEMPLATE.html","id":"how-to-test-changes","dir":"","previous_headings":"","what":"How to test changes","title":"NA","text":"…","code":""},{"path":"/PULL_REQUEST_TEMPLATE.html","id":"tasks-for-pr-author","dir":"","previous_headings":"","what":"Tasks for PR author","title":"NA","text":"Test change ensure regression Change corresponding issue. Ensure linked GitHub Author change opened pull request assigned reviewer","code":""},{"path":"/PULL_REQUEST_TEMPLATE.html","id":"general-policy","dir":"","previous_headings":"","what":"General policy:","title":"NA","text":"applicable - add instructions testing ’s issue, create . issue needs well defined described. interaction user, user-facing messages, plots, reports etc. written perspective person using receiving . understandable helpful person. user sees error message, call action, .e. user knows fix . README, documentation code comments updated information related change. code peer-reviewed merging main branch changes merged main branch use development. Continuous integration checks (linter, unit tests, integration tests) configured pass. Optional: unit tests added new changed logic. task requirements satisfied. describe . reviewer responsible verify aspect task. Change covers things task. Please create new PR want fix something else.","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Douglas Azevedo. Author. Developers Appsilon. Maintainer. Appsilon Sp. z o.o.. Copyright holder.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Azevedo D (2022). shiny.benchmark: Compare performance several versions shiny app. R package version 0.1.1, https://github.com/Appsilon/shiny.benchmark.","code":"@Manual{,   title = {shiny.benchmark: Compare performance of several versions of a shiny app},   author = {Douglas Azevedo},   year = {2022},   note = {R package version 0.1.1},   url = {https://github.com/Appsilon/shiny.benchmark}, }"},{"path":"/index.html","id":"shinybenchmark","dir":"","previous_headings":"","what":"Compare performance of several versions of a shiny app","title":"Compare performance of several versions of a shiny app","text":"Tools measure performance improvements Shiny apps.","code":""},{"path":"/index.html","id":"how-to-install","dir":"","previous_headings":"","what":"How to install?","title":"Compare performance of several versions of a shiny app","text":"","code":"remotes::install_github(\"Appsilon/shiny.benchmark\")"},{"path":"/index.html","id":"dependencies","dir":"","previous_headings":"","what":"Dependencies","title":"Compare performance of several versions of a shiny app","text":"shiny.benchmark can use two different engines test change performance application: shinytest2 Cypress. latter requires Node (version 12 higher) yarn (version 1.22.17 higher) available. install computer, follow guidelines documentation pages: Node yarn Besides , Linux, might required install Cypress dependencies. Check documentation find .","code":""},{"path":"/index.html","id":"how-to-use-it","dir":"","previous_headings":"","what":"How to use it?","title":"Compare performance of several versions of a shiny app","text":"TODO","code":""},{"path":"/index.html","id":"how-to-contribute","dir":"","previous_headings":"","what":"How to contribute?","title":"Compare performance of several versions of a shiny app","text":"want contribute project please submit regular PR, ’re done new feature bug fix. Reporting bug also helpful - please use GitHub issues describe problem detailed possible.","code":""},{"path":"/index.html","id":"appsilon","dir":"","previous_headings":"","what":"Appsilon","title":"Compare performance of several versions of a shiny app","text":"Appsilon Full Service Certified RStudio Partner. Learn appsilon.com. Get touch opensource@appsilon.com","code":""},{"path":"/reference/add_sendtime2js.html","id":null,"dir":"Reference","previous_headings":"","what":"Add the sendTime function to the .js file — add_sendtime2js","title":"Add the sendTime function to the .js file — add_sendtime2js","text":"Add sendTime function .js file","code":""},{"path":"/reference/add_sendtime2js.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add the sendTime function to the .js file — add_sendtime2js","text":"","code":"add_sendtime2js(js_file, txt_file)"},{"path":"/reference/add_sendtime2js.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add the sendTime function to the .js file — add_sendtime2js","text":"js_file Path .js file add code txt_file Path file record execution times","code":""},{"path":"/reference/benchmark.html","id":null,"dir":"Reference","previous_headings":"","what":"Execute performance tests for a list of commits — benchmark","title":"Execute performance tests for a list of commits — benchmark","text":"Execute performance tests list commits","code":""},{"path":"/reference/benchmark.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Execute performance tests for a list of commits — benchmark","text":"","code":"benchmark(   commit_list,   cypress_dir = NULL,   shinytest2_dir = NULL,   tests_pattern = NULL,   app_dir = getwd(),   port = 3333,   use_renv = TRUE,   renv_prompt = TRUE,   n_rep = 1,   debug = FALSE )"},{"path":"/reference/benchmark.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Execute performance tests for a list of commits — benchmark","text":"commit_list list commit hash codes, branches' names anything else can use git checkout ... cypress_dir directory tests recorded Cypress. can also vector size commit_list shinytest2_dir directory tests recorded shinytest2 can also vector size commit_list tests_pattern Cypress/shinytest2 files pattern. E.g. 'performance' can also vector size commit_list. NULL, content cypress_dir/shinytest2_dir used app_dir path application root port Port run app use_renv case set TRUE, package try apply renv::restore() branches. Otherwise, current loaded list packages used branches. renv_prompt Prompt user taking action? n_rep Number replications desired debug Logical. TRUE display system messages runtime","code":""},{"path":"/reference/benchmark_cypress.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the performance test based on multiple commits using Cypress — benchmark_cypress","title":"Run the performance test based on multiple commits using Cypress — benchmark_cypress","text":"Run performance test based multiple commits using Cypress","code":""},{"path":"/reference/benchmark_cypress.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the performance test based on multiple commits using Cypress — benchmark_cypress","text":"","code":"benchmark_cypress(   commit_list,   cypress_dir,   tests_pattern,   app_dir,   port,   use_renv,   renv_prompt,   n_rep,   debug )"},{"path":"/reference/benchmark_cypress.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the performance test based on multiple commits using Cypress — benchmark_cypress","text":"commit_list list commit hash codes, branches' names anything else can use git checkout ... cypress_dir directory tests recorded Cypress. can also vector size commit_list tests_pattern Cypress/shinytest2 files pattern. E.g. 'shinytest2' can also vector size commit_list. NULL, content cypress_dir/shinytest2_dir used app_dir path application root port Port run app use_renv case set TRUE, package try apply renv::restore() branches. Otherwise, current loaded list packages used branches. renv_prompt Prompt user taking action? n_rep Number replications desired debug Logical. TRUE display system messages runtime","code":""},{"path":"/reference/benchmark_shinytest2.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the performance test based on a multiple commits using shinytest2 — benchmark_shinytest2","title":"Run the performance test based on a multiple commits using shinytest2 — benchmark_shinytest2","text":"Run performance test based multiple commits using shinytest2","code":""},{"path":"/reference/benchmark_shinytest2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the performance test based on a multiple commits using shinytest2 — benchmark_shinytest2","text":"","code":"benchmark_shinytest2(   commit_list,   shinytest2_dir,   tests_pattern,   app_dir,   use_renv,   renv_prompt,   n_rep,   debug )"},{"path":"/reference/benchmark_shinytest2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the performance test based on a multiple commits using shinytest2 — benchmark_shinytest2","text":"commit_list list commit hash codes, branches' names anything else can use git checkout ... shinytest2_dir directory tests recorded shinytest2 can also vector size commit_list tests_pattern shinytest2 files pattern. E.g. 'performance' can also vector size commit_list. NULL, content cypress_dir/shinytest2_dir used app_dir path application root use_renv case set TRUE, package try apply renv::restore() branches. Otherwise, current loaded list packages used branches. renv_prompt Prompt user taking action? n_rep Number replications desired debug Logical. TRUE display system messages runtime","code":""},{"path":"/reference/check_uncommitted_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for uncommitted files — check_uncommitted_files","title":"Check for uncommitted files — check_uncommitted_files","text":"Check uncommitted files","code":""},{"path":"/reference/check_uncommitted_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for uncommitted files — check_uncommitted_files","text":"","code":"check_uncommitted_files()"},{"path":"/reference/checkout.html","id":null,"dir":"Reference","previous_headings":"","what":"Checkout GitHub branch — checkout","title":"Checkout GitHub branch — checkout","text":"checkout go different branch","code":""},{"path":"/reference/checkout.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checkout GitHub branch — checkout","text":"","code":"checkout(branch, debug)"},{"path":"/reference/checkout.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checkout GitHub branch — checkout","text":"branch Commit hash code branch name debug Logical. TRUE display system messages runtime","code":""},{"path":"/reference/checkout_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Checkout GitHub files — checkout_files","title":"Checkout GitHub files — checkout_files","text":"Checkout anything created app. prevents errors changing branches","code":""},{"path":"/reference/checkout_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checkout GitHub files — checkout_files","text":"","code":"checkout_files(debug)"},{"path":"/reference/checkout_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checkout GitHub files — checkout_files","text":"debug Logical. TRUE display system messages runtime","code":""},{"path":"/reference/create_cypress_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the cypress configuration list — create_cypress_list","title":"Create the cypress configuration list — create_cypress_list","text":"Create cypress configuration list","code":""},{"path":"/reference/create_cypress_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the cypress configuration list — create_cypress_list","text":"","code":"create_cypress_list(plugins_file, port)"},{"path":"/reference/create_cypress_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the cypress configuration list — create_cypress_list","text":"plugins_file path Cypress plugins port Port run app","code":""},{"path":"/reference/create_cypress_plugins.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the JS code to track execution time — create_cypress_plugins","title":"Create the JS code to track execution time — create_cypress_plugins","text":"Create JS code track execution time","code":""},{"path":"/reference/create_cypress_plugins.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the JS code to track execution time — create_cypress_plugins","text":"","code":"create_cypress_plugins()"},{"path":"/reference/create_cypress_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a temporary directory to store everything needed by Cypress — create_cypress_structure","title":"Create a temporary directory to store everything needed by Cypress — create_cypress_structure","text":"Create temporary directory store everything needed Cypress","code":""},{"path":"/reference/create_cypress_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a temporary directory to store everything needed by Cypress — create_cypress_structure","text":"","code":"create_cypress_structure(app_dir, port, debug)"},{"path":"/reference/create_cypress_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a temporary directory to store everything needed by Cypress — create_cypress_structure","text":"app_dir path application root port Port run app debug Logical. TRUE display system messages runtime","code":""},{"path":"/reference/create_cypress_tests.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the cypress files under project directory — create_cypress_tests","title":"Create the cypress files under project directory — create_cypress_tests","text":"Create cypress files project directory","code":""},{"path":"/reference/create_cypress_tests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the cypress files under project directory — create_cypress_tests","text":"","code":"create_cypress_tests(project_path, cypress_dir, tests_pattern)"},{"path":"/reference/create_cypress_tests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the cypress files under project directory — create_cypress_tests","text":"project_path path project needed packages installed cypress_dir directory tests recorded Cypress tests_pattern Cypress files pattern. E.g. 'performance'. NULL, content used","code":""},{"path":"/reference/create_node_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Create the list of needed libraries — create_node_list","title":"Create the list of needed libraries — create_node_list","text":"Create list needed libraries","code":""},{"path":"/reference/create_node_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create the list of needed libraries — create_node_list","text":"","code":"create_node_list(tests_path, port)"},{"path":"/reference/create_node_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create the list of needed libraries — create_node_list","text":"tests_path path project port Port run app","code":""},{"path":"/reference/create_progress_bar.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a progress bar to follow the execution — create_progress_bar","title":"Create a progress bar to follow the execution — create_progress_bar","text":"Create progress bar follow execution","code":""},{"path":"/reference/create_progress_bar.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a progress bar to follow the execution — create_progress_bar","text":"","code":"create_progress_bar(total = 100)"},{"path":"/reference/create_progress_bar.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a progress bar to follow the execution — create_progress_bar","text":"total Total number replications","code":""},{"path":"/reference/create_shinytest2_structure.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a temporary directory to store everything needed by shinytest2 — create_shinytest2_structure","title":"Create a temporary directory to store everything needed by shinytest2 — create_shinytest2_structure","text":"Create temporary directory store everything needed shinytest2","code":""},{"path":"/reference/create_shinytest2_structure.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a temporary directory to store everything needed by shinytest2 — create_shinytest2_structure","text":"","code":"create_shinytest2_structure(app_dir)"},{"path":"/reference/create_shinytest2_structure.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a temporary directory to store everything needed by shinytest2 — create_shinytest2_structure","text":"app_dir path application root","code":""},{"path":"/reference/get_commit_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the commit date in POSIXct format — get_commit_date","title":"Get the commit date in POSIXct format — get_commit_date","text":"Get commit date POSIXct format","code":""},{"path":"/reference/get_commit_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the commit date in POSIXct format — get_commit_date","text":"","code":"get_commit_date(branch)"},{"path":"/reference/get_commit_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the commit date in POSIXct format — get_commit_date","text":"branch Commit hash code branch name","code":""},{"path":"/reference/get_commit_hash.html","id":null,"dir":"Reference","previous_headings":"","what":"Find the hash code of the current commit — get_commit_hash","title":"Find the hash code of the current commit — get_commit_hash","text":"Find hash code current commit","code":""},{"path":"/reference/get_commit_hash.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find the hash code of the current commit — get_commit_hash","text":"","code":"get_commit_hash()"},{"path":"/reference/load_example.html","id":null,"dir":"Reference","previous_headings":"","what":"Load an application and instructions to run shiny.benchmark — load_example","title":"Load an application and instructions to run shiny.benchmark — load_example","text":"function aims generate template used shiny.benchmark. create necessary structure path examples tests using Cypress shinytest2. Also, simple application added folder well instructions perform performance checks. aware new git repo need selected path.","code":""},{"path":"/reference/load_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load an application and instructions to run shiny.benchmark — load_example","text":"","code":"load_example(path)"},{"path":"/reference/load_example.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load an application and instructions to run shiny.benchmark — load_example","text":"path character vector full path name","code":""},{"path":"/reference/move_shinytest2_tests.html","id":null,"dir":"Reference","previous_headings":"","what":"Move tests to a temporary folder — move_shinytest2_tests","title":"Move tests to a temporary folder — move_shinytest2_tests","text":"Move tests temporary folder","code":""},{"path":"/reference/move_shinytest2_tests.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move tests to a temporary folder — move_shinytest2_tests","text":"","code":"move_shinytest2_tests(project_path, shinytest2_dir)"},{"path":"/reference/move_shinytest2_tests.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move tests to a temporary folder — move_shinytest2_tests","text":"project_path path project shinytest2_dir directory tests recorded shinytest2","code":""},{"path":"/reference/plot.shiny_benchmark.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot for shiny_benchmark class — plot.shiny_benchmark","title":"Plot for shiny_benchmark class — plot.shiny_benchmark","text":"Plot shiny_benchmark class","code":""},{"path":"/reference/plot.shiny_benchmark.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot for shiny_benchmark class — plot.shiny_benchmark","text":"","code":"# S3 method for shiny_benchmark plot(x, ...)"},{"path":"/reference/plot.shiny_benchmark.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot for shiny_benchmark class — plot.shiny_benchmark","text":"x shiny_benchmark object ... parameters","code":""},{"path":"/reference/print.shiny_benchmark.html","id":null,"dir":"Reference","previous_headings":"","what":"Print for shiny_benchmark class — print.shiny_benchmark","title":"Print for shiny_benchmark class — print.shiny_benchmark","text":"Print shiny_benchmark class","code":""},{"path":"/reference/print.shiny_benchmark.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Print for shiny_benchmark class — print.shiny_benchmark","text":"","code":"# S3 method for shiny_benchmark print(x, ...)"},{"path":"/reference/print.shiny_benchmark.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Print for shiny_benchmark class — print.shiny_benchmark","text":"x shiny_benchmark object ... parameters","code":""},{"path":"/reference/restore_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Check and restore renv — restore_env","title":"Check and restore renv — restore_env","text":"Check whether renv use current branch. Raise error renv use apply renv:restore() case package present","code":""},{"path":"/reference/restore_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check and restore renv — restore_env","text":"","code":"restore_env(branch, renv_prompt)"},{"path":"/reference/restore_env.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check and restore renv — restore_env","text":"branch Commit hash code branch name. Useful create informative error message renv_prompt Prompt user taking action?","code":""},{"path":"/reference/run_cypress_ptest.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the performance test based on a single commit using Cypress — run_cypress_ptest","title":"Run the performance test based on a single commit using Cypress — run_cypress_ptest","text":"Run performance test based single commit using Cypress","code":""},{"path":"/reference/run_cypress_ptest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the performance test based on a single commit using Cypress — run_cypress_ptest","text":"","code":"run_cypress_ptest(   commit,   project_path,   cypress_dir,   tests_pattern,   use_renv,   renv_prompt,   n_rep,   debug )"},{"path":"/reference/run_cypress_ptest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the performance test based on a single commit using Cypress — run_cypress_ptest","text":"commit commit hash code branch's name project_path path project needed packages installed cypress_dir directory tests recorded Cypress tests_pattern Cypress files pattern. E.g. 'performance'. NULL, content used use_renv case set TRUE, package try apply renv::restore() branches. Otherwise, current loaded list packages used branches. renv_prompt Prompt user taking action? n_rep Number replications desired debug Logical. TRUE display system messages runtime","code":""},{"path":"/reference/run_shinytest2_ptest.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the performance test based on a single commit using shinytest2 — run_shinytest2_ptest","title":"Run the performance test based on a single commit using shinytest2 — run_shinytest2_ptest","text":"Run performance test based single commit using shinytest2","code":""},{"path":"/reference/run_shinytest2_ptest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the performance test based on a single commit using shinytest2 — run_shinytest2_ptest","text":"","code":"run_shinytest2_ptest(   commit,   project_path,   app_dir,   shinytest2_dir,   tests_pattern,   use_renv,   renv_prompt,   n_rep,   debug )"},{"path":"/reference/run_shinytest2_ptest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the performance test based on a single commit using shinytest2 — run_shinytest2_ptest","text":"commit commit hash code branch's name project_path path project app_dir path application root shinytest2_dir directory tests recorded shinytest2 tests_pattern shinytest2 files pattern. E.g. 'performance'. NULL, content used use_renv case set TRUE, package try apply renv::restore() branches. Otherwise, current loaded list packages used branches. renv_prompt Prompt user taking action? n_rep Number replications desired debug Logical. TRUE display system messages runtime","code":""},{"path":"/reference/shiny_benchmark-class.html","id":null,"dir":"Reference","previous_headings":"","what":"An object of 'shiny_benchmark' class — shiny_benchmark-class","title":"An object of 'shiny_benchmark' class — shiny_benchmark-class","text":"object 'shiny_benchmark' class","code":""},{"path":"/reference/shiny_benchmark-class.html","id":"slots","dir":"Reference","previous_headings":"","what":"Slots","title":"An object of 'shiny_benchmark' class — shiny_benchmark-class","text":"call Function call time Time elapsed performance List measuraments (one entry commit)","code":""},{"path":"/reference/summarise_commit.html","id":null,"dir":"Reference","previous_headings":"","what":"Return statistics based on the set of tests replications — summarise_commit","title":"Return statistics based on the set of tests replications — summarise_commit","text":"Return statistics based set tests replications","code":""},{"path":"/reference/summarise_commit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return statistics based on the set of tests replications — summarise_commit","text":"","code":"summarise_commit(object)"},{"path":"/reference/summarise_commit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return statistics based on the set of tests replications — summarise_commit","text":"object shiny_benchmark object","code":""},{"path":"/reference/summary.shiny_benchmark.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary for shiny_benchmark class — summary.shiny_benchmark","title":"Summary for shiny_benchmark class — summary.shiny_benchmark","text":"Summary shiny_benchmark class","code":""},{"path":"/reference/summary.shiny_benchmark.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary for shiny_benchmark class — summary.shiny_benchmark","text":"","code":"# S3 method for shiny_benchmark summary(object, ...)"},{"path":"/reference/summary.shiny_benchmark.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary for shiny_benchmark class — summary.shiny_benchmark","text":"object shiny_benchmark object ... parameters","code":""}]
